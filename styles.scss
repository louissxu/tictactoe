$primaryColour: rgb(47, 138, 199);
$secondaryColour: #2ecc71;
$tertiaryColour: #7F8C8D;
$mainBackgroundColour: #ECF0F1;
$overlayFadeColour: rgba(64, 64, 64, 0.66);

$cellColour: $tertiaryColour;

* {
    box-sizing: border-box;
}

body {
    font-family: "Open Sans", sans-serif;
    font-size: 0.875rem;
    margin: 0px;

    // Textured background. SVG designed in illustrator then SVG code directly encoded
    // Ref: https://stackoverflow.com/questions/10768451/inline-svg-in-css
    // Ref: https://yoksel.github.io/url-encoder/
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='32' height='16' viewBox='0 0 32 16'%3E%3Cdefs%3E%3Cstyle%3E .cls-1 %7B fill: %23303030; %7D .cls-2 %7B fill: %23404040; %7D .cls-3 %7B fill: none; stroke: %23404040; stroke-linecap: round; stroke-miterlimit: 10; %7D %3C/style%3E%3C/defs%3E%3Ctitle%3EBackground%3C/title%3E%3Cg id='Background' data-name='Background'%3E%3Crect class='cls-1' width='32' height='16'/%3E%3C/g%3E%3Cg id='Texture' data-name='Texture'%3E%3Cpath class='cls-2' d='M12.5,10.5a2,2,0,1,1-2,2,2,2,0,0,1,2-2m0-1a3,3,0,1,0,3,3,3,3,0,0,0-3-3Z'/%3E%3Cpath class='cls-2' d='M28.5,10.5a2,2,0,1,1-2,2,2,2,0,0,1,2-2m0-1a3,3,0,1,0,3,3,3,3,0,0,0-3-3Z'/%3E%3Cline class='cls-3' x1='22.97' y1='6.97' x2='18.03' y2='2.03'/%3E%3Cline class='cls-3' x1='22.97' y1='2.03' x2='18.03' y2='6.97'/%3E%3Cline class='cls-3' x1='4.5' y1='8' x2='4.5' y2='1'/%3E%3Cline class='cls-3' x1='8' y1='4.5' x2='1' y2='4.5'/%3E%3C/g%3E%3C/svg%3E%0A");
    background-repeat: repeat;
    background-attachment: fixed;
}

/* Button Styling */
/* Ref: https://moderncss.dev/css-button-styling-guide/ */

.button, .cell {
    border: none;
    background-color: transparent;
    font-family: inherit;
    padding: 0;
    cursor: pointer;

    display: inline-flex;
    align-items: center;
    justify-content: center;
}

.button {
    font-size: 0.875rem;
    letter-spacing: 1.25;
    font-weight: 500;
    margin: 5px;

    background-color: $primaryColour;
    color: #fff;
    border-radius: 4px;
    // box-shadow: 0 3px 5px rgba(0, 0, 0, 0.18);

    padding: 5px 5px;
    width: 100px;
    min-height: 36px;

    text-align: center;
    line-height: 1.1;

    transition: 100ms all ease-in-out;

    &:hover {
        background-color: scale-color($primaryColour, $lightness: 20%);
    }

    &:active {
        background-color: scale-color($primaryColour, $lightness: -25%, $saturation: -0%);
    }

    &:focus {
        outline-style: solid;
        outline-color: transparent;
        box-shadow: 0 0 0 3px scale-color($primaryColour, $lightness: 50%);
    }

    &:disabled {
        background-color: $primaryColour;
        opacity: 0.3;
        cursor: none;
    }
}

#demo-game {
    background-color: $secondaryColour;

    &:hover {
        background-color: scale-color($secondaryColour, $lightness: 20%);
    }

    &:active {
        background-color: scale-color($secondaryColour, $lightness: -25%, $saturation: -0%);
    }

    &:focus {
        outline-style: solid;
        outline-color: transparent;
        box-shadow: 0 0 0 3px scale-color($secondaryColour, $lightness: 50%);
    }

    &:disabled {
        background-color: $secondaryColour;
        opacity: 0.3;
        cursor: none;
    }
}

.cell {
    background-color: $cellColour;
    border: none;
    font-size: 40px;
    text-align: center;

    transition: 100ms all ease-in-out;

    border-radius: 15px;

    box-shadow: 0 9px #555;

    outline: transparent;

    position: relative; // Anchor for focus after pseudo-element
    
    &:hover:not(:disabled) {
        background-color: scale-color($cellColour, $lightness: 20%);
    }

    &:active {
        background-color: scale-color($cellColour, $lightness: -25%, $saturation: -0%);
        box-shadow: 0 5px #333;
        transform: translateY(4px);
    }

    &:focus {
        // Focus styling is handled in :focus:after

        // outline-style: solid;
        // outline-color: scale-color($cellColour, $lightness: 50%);
        // outline-width: 3px;

        // border: 3px solid scale-color($cellColour, $lightness: 50%);
        // outline: transparent;

        // box-shadow: 0 0 0 3px scale-color($cellColour, $lightness: 50%);
    }

    &:focus:after {
        // Used pseudo-element so that it doesn't replace box-shadow and can do rounded corners (outline can't round corners)
        // Ref: https://stackoverflow.com/questions/5394116/outline-radius
        content: "";
        display: block;
        position: absolute;
        top: -3px;
        bottom: -3px;
        left: -3px;
        right: -3px;
        border: 3px solid scale-color($cellColour, $lightness: 50%);
        border-radius: 18px;
    }

    &:disabled {
        // background-color: $cellDisabledColour;
        
        // background-color: $cellColour;
        // color: rgba(16, 16, 16, 0.8);
        // opacity: 0.7;
        cursor: default;

        // box-shadow: 0 9px #777
        color: rgba(0,0,0,1)  // disable reset to remove the fade out. Fade out gets handled by .fade class
    }
}

button.cell.winning-cell:disabled {
    background-color: $secondaryColour;
    color: rgb(0,0,0);
}

button.cell.fade:disabled {
    background-color: $cellColour;
    color: rgba(16, 16, 16, 0.8);
    opacity: 0.7;
    cursor: default;
    box-shadow: 0 9px #777
}

h1 {
    font-weight: 400;
    font-size: 2rem;
}

h3 {
    margin: 0px;
    font-weight: 500;
    font-size: 1.25rem;
    letter-spacing: 0;
}

#n-spacer-container {
    max-width: 600px;
    margin: 0px auto 0px auto;

    min-height: 100vh;
    display: flex;
    flex-direction: column;
}

#n-spacer-top {
    max-height: 100px;
    flex-grow: 0.5;
}

#n-spacer-bottom {
    flex-grow: 1;
}

// Simulate collapsing borders by using parent-child border alignment
// REF: https://stackoverflow.com/questions/35678353/how-to-create-collapsed-borders-around-flex-items-and-their-container

// Had to use margin because transparent border shows the element's background colour not through to the background itself

// Also adapted to use MDN description of "gutters"
// REF: https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Flexible_Box_Layout/Mastering_Wrapping_of_Flex_Items

@mixin parent-border {
    // border-style: solid;
    // border-color: transparent;
    // border-width: 5px 0 0 5px;
    margin: 2.5px;
}

@mixin child-border {
    // border-style: solid;
    // border-color: transparent;
    // border-width: 0 5px 5px 0;
    margin: 2.5px;
}

#n-container-main {
    max-width: 620px;
    
    display: flex;
    flex-direction: row-reverse;
    flex-wrap: wrap;

    @include parent-border;
}

#n-container-header {
    flex: 0 1 600px;
    text-align: center;

    background-color: $mainBackgroundColour;

    @include child-border;
}

#n-container-controls {
    flex: 1 0 220px;

    display: flex;
    flex-wrap: wrap;
}

.n-container-players {
    flex: 1 1 220px;
    padding: 5px;

    background-color: $mainBackgroundColour;

    @include child-border;
}

.n-container-players-content {
    margin: 5px auto 5px auto;
    padding: 5px;
    width: 220px;
}

.n-container-buttons {
    flex: 1 1 600px;
    text-align: center;
    padding: 5px;
    
    background-color: $mainBackgroundColour;

    @include child-border;
}

#n-container-game{
    flex: 1 0 300px;
    text-align: center;

    padding: 5px;

    background-color: $mainBackgroundColour;

    @include child-border;
}

#game-board {
    width: 300px;
    height: 350px;
    
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    grid-template-rows: 1fr 1fr 1fr 0px;
    
    grid-column-gap: 3px;
    grid-row-gap: 12px;
    // background-color: white;
    
    margin: 0px auto 0px auto;
    padding-top: 10px;
    padding-bottom: 10px;
}

#game-alerts {
    width: 300px;
    padding: 5px;
    margin: 5px auto 5px auto;
    text-align: center;
}

#container-canvas {
    position: relative;
    width: 300px;
    top: -340px;
    margin: 0px auto 0px auto;
}

#canvas {
    display: none;
    position: absolute;
}

#n-container-footer {
    flex: 0 1 600px;
    text-align: center;

    background-color: $mainBackgroundColour;

    padding: 5px;

    @include child-border;
}

.fade-out {
    opacity: 0.6;
}

// Input field styling
.custom-input {
    position: relative;
    margin: 8px 0;
    display: inline-block;

    & input[type=text], select {
        background: transparent;
        border: solid 1px $tertiaryColour;
        border-radius: 4px;

        padding: 6px 8px 6px 8px;
        // transition: padding 0.2s;

        font-size: 16px;
        height: 34px;
        
    }

    & input[type=text] {
        width: 132px;
    }

    & select {
        width: 62px;
    }

    & input[type=text]:placeholder-shown + label {
        color: $tertiaryColour;
        font-size: 16px;
        left: 6px;
        top: 6px;
    }

    & label,
    input[type=text]:focus + label {
        color: $primaryColour;
        background-color: $mainBackgroundColour;
        padding: 0 4px;
        font-size: 8px;
        position: absolute;
        left: 6px;
        top: -6px;
        pointer-events: none;
        transition: top 0.2s, left 0.2s, font-size 0.2s;
    }

    & input[type=text]::placeholder {
        color: transparent;
        display: none;
    }

    & input[type=text]:focus,
    select:focus {
        border: solid 1px $primaryColour;
        outline: none;
    }

    & input[type=text]:not(:focus) + label,
    select:not(:focus) + label {
        color: $tertiaryColour;

    }
}

.custom-input {
    margin-right: 8px;
}

.custom-input + .custom-input {
    margin-right: 0px;
}